<?php/** * Plugin Name:       WHA Wordsearch * Description:       This is a short description of what the plugin does. It's displayed in the WordPress admin area. * Version:           2.0.0 * Author:            WHA * Author URI:        http://webhelpagency.com/ * License:           GPL-2.0+ * License URI:       http://www.gnu.org/licenses/gpl-2.0.txt * Text Domain:       wordsearch * Domain Path:       /languages * * WHA Wordsearch is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 2 of the License, or * any later version. * * WHA Wordsearch is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with WHA Wordsearch. If not, see http://www.gnu.org/licenses/gpl-2.0.txt. */if (!defined('ABSPATH')) {    exit; // Exit if accessed directly}// If this file is called directly, abort.if (!defined('WPINC')) {    die;}define('WHAWS_VERSION', '2.0.0');function whaws_activation(){    do_action('whaws_activation');}register_activation_hook(__FILE__, 'whaws_activation');function whaws_deactivation(){    do_action('whaws_deactivation');}register_deactivation_hook(__FILE__, 'whaws_deactivation');add_action('admin_enqueue_scripts', 'whaws_admin_scripts');function whaws_admin_scripts($hook_suffix){    global $post;    wp_enqueue_style('wha-wordsearch-style-admin', plugins_url('res/admin/wordsearch-admin.css', __FILE__));    wp_enqueue_script('wha-wordsearch-script-admin', plugins_url('res/admin/wordsearch-admin.js', __FILE__), false, '1.0', true);    wp_enqueue_style('wordsearch-awesome-css', plugins_url('res/admin/font-awesome/css/font-awesome.min.css', __FILE__));    wp_localize_script('wha-wordsearch-script-admin', 'wordsearch_vars_admin', array(        'whaws_use_global_options' => get_post_meta($post->ID, 'whaws_use_global_options', true),    ));}add_action('wp_enqueue_scripts', 'whaws_scripts');function whaws_scripts() //register scripts and style{    global $post;	global $shortcode_tags;    wp_enqueue_media();    if (is_a($post, 'WP_Post') && has_shortcode($post->post_content, 'game-wordsearch')) { //include scripts/style only on pages with shortcode        wp_enqueue_style('wha-wordsearch-style', plugins_url('res/wordsearch.css', __FILE__));        wp_enqueue_script('wha-wordsearch-angular-js', plugins_url('res/libs/angular.min.js', __FILE__), true, true, true);        wp_enqueue_script('wha-wordsearch-underscore-js', plugins_url('res/libs/underscore-min.js', __FILE__), true, true, true);        wp_enqueue_script('wha-wordsearch-script', plugins_url('res/wordsearch.js', __FILE__), true, true, true);    }    wp_localize_script('ajax-script', 'my_ajax_object',        array('ajax_url' => admin_url('admin-ajax.php')));}add_action('init', 'whaws_register_post_type');function whaws_register_post_type() // create post type{    $labels = array(        'name' => __('Wordsearch', 'wordsearch'),        'menu_name' => __('Wordsearch', 'wordsearch'),        'singular_name' => __('Wordsearch', 'wordsearch'),        'name_admin_bar' => _x('Wordsearch', 'name admin bar', 'wordsearch'),        'all_items' => __('All  wordsearch', 'wordsearch'),        'search_items' => __('Search  wordsearch', 'wordsearch'),        'add_new' => _x('Add New', 'wordsearch', 'wordsearch'),        'add_new_item' => __('Add New wordsearch', 'wordsearch'),        'new_item' => __('New  wordsearch', 'wordsearch'),        'view_item' => __('View  wordsearch', 'wordsearch'),        'edit_item' => __('Edit  wordsearch', 'wordsearch'),        'not_found' => __('No  wordsearch Found.', 'wordsearch'),        'not_found_in_trash' => __('Wordsearch not found in Trash.', 'wordsearch'),        'parent_item_colon' => __('Parent wordsearch', 'wordsearch'),    );    $args = array(        'labels' => $labels,        'description' => __('Holds the wordsearch and their data.', 'wordsearch'),        'menu_position' => 5,        'menu_icon' => 'dashicons-editor-help',        'public' => true,        'publicly_queryable' => false,        'show_ui' => true,        'show_in_menu' => true,        'query_var' => true,        'capability_type' => 'post',        'has_archive' => true,        'hierarchical' => false,        'supports' => array('title'),    );    register_post_type('wha_wordsearch', $args);}add_filter('the_content', 'whaws_create_page');function whaws_create_page($content) // create plugin page{    global $post;    if ('wha_wordsearch' !== $post->post_type) {        return $content;    }    if (!is_single()) {        return $content;    }    $wordsearch_html = whaws_game_return(array('id' => $post->ID));    return $wordsearch_html . $content;}function whaws_game_return($atts) // call wordsearch options on a plugin page{		wp_enqueue_style('wha-wordsearch-style', plugins_url('res/wordsearch.css', __FILE__));        wp_enqueue_script('wha-wordsearch-angular-js', plugins_url('res/libs/angular.min.js', __FILE__), true, true, true);        wp_enqueue_script('wha-wordsearch-underscore-js', plugins_url('res/libs/underscore-min.js', __FILE__), true, true, true);        wp_enqueue_script('wha-wordsearch-script', plugins_url('res/wordsearch.js', __FILE__), true, true, true);    if (!isset($atts['id'])) {        return false;    }    $id = $atts['id'];    $whaws_use_global = get_post_meta($id, "whaws_use_global_options", true);    $whaws_instruction = get_post_meta($id, "whaws_instruction", true);    $whaws_direction = get_post_meta($id, "whaws_direction", true);    $whaws_congradulations_text_option = get_option('whaws_congradulations_text_option');    $whaws_congratulations = get_post_meta($id, 'whaws_congratulations', true);    $whaws_level_difficulty = get_post_meta($id, 'whaws_level_difficulty', true);    if ($whaws_use_global == "yes") {        $whaws_alphabet_option = get_option('whaws_alphabet_option_name');        $whaws_rightwards_arrow = get_option('whaws_rightwards_arrow');        $whaws_downwards_arrow = get_option('whaws_downwards_arrow');        $whaws_leftwards_arrow = get_option('whaws_leftwards_arrow');        $whaws_upwards_arrow = get_option('whaws_upwards_arrow');        $whaws_south_east_arrow = get_option('whaws_south_east_arrow');        $whaws_north_east_arrow = get_option('whaws_north_east_arrow');        $whaws_south_west_arrow = get_option('whaws_south_west_arrow');        $whaws_north_west_arrow = get_option('whaws_north_west_arrow');    } else {        $whaws_alphabet_option = get_post_meta($id, 'whaws_alphabet_option', true);        $whaws_rightwards_arrow = get_post_meta($id, 'whaws_rightwards_arrow', true);        $whaws_downwards_arrow = get_post_meta($id, 'whaws_downwards_arrow', true);        $whaws_leftwards_arrow = get_post_meta($id, 'whaws_leftwards_arrow', true);        $whaws_upwards_arrow = get_post_meta($id, 'whaws_upwards_arrow', true);        $whaws_south_east_arrow = get_post_meta($id, 'whaws_south_east_arrow', true);        $whaws_north_east_arrow = get_post_meta($id, 'whaws_north_east_arrow', true);        $whaws_south_west_arrow = get_post_meta($id, 'whaws_south_west_arrow', true);        $whaws_north_west_arrow = get_post_meta($id, 'whaws_north_west_arrow', true);    }    $html = '';    $wordsearch = get_post_meta($id, 'wha_wordsearch', true);    $rows = json_decode($wordsearch, true, 512, JSON_UNESCAPED_UNICODE);    $html .= '<div class="row wha-wordsearch-row">        <div class="wha-wordsearch-container">';    $html .= '<div class="wha-wordsearch" id="wha-wordsearch"></div>';    $i = 1;    if (is_array($rows) || is_object($rows)) {        foreach ($rows as $row) {            $html .= '<input class="wha-wordsearch-word" type="hidden" value="' . esc_html($row['word']) . '"/>';            $i++;        }    }    $html .= '</div>';    $html .= '<div class="wha-wordsearch-app clearfix" ng-app="wordsearchApp" ng-controller="WordsearchCtrl">        <!--[if lt IE 9]>        <p class="browsehappy">Oh no! This game won\'t work in your browser.            Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>        <![endif]-->        <input type="hidden" id="whaws_alphabet_option" value="' . esc_attr($whaws_alphabet_option) . '">                <input type="hidden" id="whaws_rightwards_arrow" value="' . esc_attr($whaws_rightwards_arrow) . '">        <input type="hidden" id="whaws_downwards_arrow" value="' . esc_attr($whaws_downwards_arrow) . '">        <input type="hidden" id="whaws_leftwards_arrow" value="' . esc_attr($whaws_leftwards_arrow) . '">        <input type="hidden" id="whaws_upwards_arrow" value="' . esc_attr($whaws_upwards_arrow) . '">        <input type="hidden" id="whaws_south_east_arrow" value="' . esc_attr($whaws_south_east_arrow) . '">        <input type="hidden" id="whaws_north_east_arrow" value="' . esc_attr($whaws_north_east_arrow) . '">        <input type="hidden" id="whaws_south_west_arrow" value="' . esc_attr($whaws_south_west_arrow) . '">        <input type="hidden" id="whaws_north_west_arrow" value="' . esc_attr($whaws_north_west_arrow) . '">        <div class="panel panel-default">            <div class="wordsearch-body">                <div>                    <div class="wha-information ">                                                        ' . ($whaws_instruction == "yes" ? get_option("whaws_how_to_play") : '') . '                                                           <br>                               <div ' . ($whaws_use_global == 'yes' ? 'style="display: block"' : 'style="display: none"') . '>                            <span>' . __("Select Level:", "wordsearch") . '</span>                                                    <div class="wha-dropdown wha-wrap-drop" id="noble-gases">                            <span>{{ currentLevel.width }}x{{ currentLevel.height }}</span>                                                        <ul id="wha-level-select-dropdown" class="wha-drop" tabindex="0">                                                               <li ng-repeat="level in levels">                                    <a href="javascript:void(0)" ng-click="loadLevel(level)" value="{{ level.width }}x{{ level.height }}">                                                                           {{ level.width }}x{{ level.height }}                                                                        </a>                                                                     </li>                            </ul>                                  </div>                        </div>                    </div>                </div>            </div>        </div>             <div class="wha-words_field wha-dir-' . $whaws_direction . ' ">            <div class="text-center padding-vertical">                <div class="wha-ws-grid" ng-class=\'colorClass\'>                    <div ng-repeat="row in grid.cells">                        <div class="wha-ws-cell" ng-repeat="cell in row"                             ng-click="cellClicked(cell)"                             ng-mouseenter="updatePath(cell)"                             ng-mouseleave="selectedCell && clearPath()"                             ng-class="{wha_selected: cell.isSelected, wha_path: cell.onPath, \'wha_correct-path\': cell.onCorrectPath}">                            <div class="wha-solved" ng-class="colorClass"                                 ng-repeat="colorClass in cell.solvedColorClasses track by $index"></div>                            {{cell.letter}}                        </div>                    </div>                </div>            </div>            <div class="text-center wha-word-list">                            <button type="button" class="wha-word" ng-repeat="word in testwords">{{word}}</button>                <!-- <button class="wha-word wha-solved" ng-class="word.colorClass" ng-repeat="word in foundWords">{{word.word}}</button> -->                           </div>        </div>        <!-- Modal -->                <div class="wha-modal-wordsearch wha-modale" id="myModal-' . $id . '" aria-hidden="true">           <div class="wha-modal-dialog">           <div class="wha-modal-wrap">           <div class="wha-modal-header">           <a href="#" class="wha-btn-close wha-closemodale" aria-hidden="true">&times;</a>           </div>                <div class="wha-modal-body">                    ' . ($whaws_use_global == "no" ? (!empty($whaws_congratulations) ? apply_filters('the_content', $whaws_congratulations) : '<h3>CONGRATULATIONS!<h3><h3>YOU WIN</h3>') : (!empty($whaws_congradulations_text_option) ? apply_filters('the_content', $whaws_congradulations_text_option) : '<h3>CONGRATULATIONS!<h3><h3>YOU WIN</h3>')) . '                                        </div>            </div>            </div>            </div>            </div>        </div>';    $html .= "<script>        /* <![CDATA[ */        var optional_wordsearch_vars = {            'whaws_level_difficulty':'" . preg_replace('/([*])([0-9]+)/', '', $whaws_level_difficulty) . "',            'whaws_use_global_options':'" . get_post_meta($id, 'whaws_use_global_options', true) . "'        };        /* ]]> */        </script>";    return $html;}add_shortcode('game-wordsearch', 'whaws_game_return');add_action('add_meta_boxes', 'whaws_custom_box_shortcode', 1);function whaws_custom_box_shortcode() //add shortcode box{    $screens = array('wha_wordsearch');    add_meta_box(' whaws_sectionid_shortcode', 'Wordsearch shortcode', 'whaws_meta_box_shortcode_callback', $screens, 'advanced', 'high');}function whaws_meta_box_shortcode_callback($post, $meta) //create shortcode{    $screens = $meta['args'];    wp_nonce_field(plugin_basename(__FILE__), 'myplugin_noncename');    echo '<div class="wha-tooltip" style="cursor: pointer; width: max-content">          <span class="wha-shortcode">[game-wordsearch id="' . $post->ID . '" ]</span>          <textarea class="js-copytextarea" >[game-wordsearch id="' . $post->ID . '" ]</textarea>          <span class="wha-tooltiptext">Copied!</span>          </div>';}add_action('add_meta_boxes', 'whaws_individual_options_box', 1);function whaws_individual_options_box() // Add Individual option box{    $screens = array('wha_wordsearch');    add_meta_box('whaws_sectionid_individual_options', 'Individual options', 'whaws_metabox_individual_callback', $screens, 'advanced', 'low');}function whaws_metabox_individual_callback($post, $meta) // Call Individual option fields{    $screens = $meta['args'];    wp_nonce_field(plugin_basename(__FILE__), 'myplugin_noncename');    $whaws_alphabet_cross = get_post_meta($post->ID, 'whaws_alphabet_option', true);    $whaws_rightwards_arrow = get_post_meta($post->ID, 'whaws_rightwards_arrow', true);    $whaws_downwards_arrow = get_post_meta($post->ID, 'whaws_downwards_arrow', true);    $whaws_leftwards_arrow = get_post_meta($post->ID, 'whaws_leftwards_arrow', true);    $whaws_upwards_arrow = get_post_meta($post->ID, 'whaws_upwards_arrow', true);    $whaws_south_east_arrow = get_post_meta($post->ID, 'whaws_south_east_arrow', true);    $whaws_north_east_arrow = get_post_meta($post->ID, 'whaws_north_east_arrow', true);    $whaws_south_west_arrow = get_post_meta($post->ID, 'whaws_south_west_arrow', true);    $whaws_north_west_arrow = get_post_meta($post->ID, 'whaws_north_west_arrow', true);    $whaws_level_difficulty = get_post_meta($post->ID, 'whaws_level_difficulty', true);    $whaws_use_global = get_post_meta($post->ID, 'whaws_use_global_options', true);    $whaws_instruction = get_post_meta($post->ID, 'whaws_instruction', true);    $whaws_direction = get_post_meta($post->ID, 'whaws_direction', true);    $whaws_congratulations = get_post_meta($post->ID, 'whaws_congratulations', true);    $whaws_directions_array = array(        array(            'title' => "Direction 1",            'name' => "whaws_rightwards_arrow",            'value' => $whaws_rightwards_arrow,            'html' => "<label for='whaws_rightwards_arrow'><i class='fa fa-arrow-right'></i></label>"        ),        array(            'title' => "Direction 2",            'name' => "whaws_downwards_arrow",            'value' => $whaws_downwards_arrow,            'html' => "<label for='whaws_downwards_arrow'><i class='fa fa-arrow-down'></i></label>"        ),        array(            'title' => "Direction 3",            'name' => "whaws_leftwards_arrow",            'value' => $whaws_leftwards_arrow,            'html' => "<label for='whaws_leftwards_arrow'><i class='fa fa-arrow-left'></i></label>"        ),        array(            'title' => "Direction 4",            'name' => "whaws_upwards_arrow",            'value' => $whaws_upwards_arrow,            'html' => "<label for='whaws_upwards_arrow'><i class='fa fa-arrow-up'></i></label>"        ),        array(            'title' => "Direction 5",            'name' => "whaws_south_east_arrow",            'value' => $whaws_south_east_arrow,            'html' => "<label for='whaws_south_east_arrow'><i class='fa fa-arrow-down wha-rotate-45-left'></i></label>"        ),        array(            'title' => "Direction 6",            'name' => "whaws_north_east_arrow",            'value' => $whaws_north_east_arrow,            'html' => "<label for='whaws_north_east_arrow'><i class='fa fa-arrow-up wha-rotate-45-right'></i></label>"        ),        array(            'title' => "Direction 7",            'name' => "whaws_south_west_arrow",            'value' => $whaws_south_west_arrow,            'html' => "<label for='whaws_south_west_arrow'><i class='fa fa-arrow-down wha-rotate-45-right'></i></label>"        ),        array(            'title' => "Direction 8",            'name' => "whaws_north_west_arrow",            'value' => $whaws_north_west_arrow,            'html' => "<label for='whaws_north_west_arrow'><i class='fa fa-arrow-up wha-rotate-45-left'></i></label>"        )    );    if (current_user_can('edit_published_posts')) {        echo '<div style="margin-bottom: 30px;">';        echo '<div class="wha_level">';        echo __('<h3>Level Of Difficulty</h3>');        echo __('<span>Choose which level to display</span>');        echo __('<p style="color: red">*level, more than 11*11 may cause display errors on tablets and phones.</p>');        echo '<div>';        echo '<select name="whaws_level_difficulty">';        echo ' <option selected="selected" disabled>Select level </option>';        echo ' <option ' . ($whaws_level_difficulty == '8*8' ? "selected" : "") . ' value="8*8">8*8</option>';        echo ' <option ' . ($whaws_level_difficulty == '9*9' ? "selected" : "") . ' value="9*9">9*9</option>';        echo ' <option ' . ($whaws_level_difficulty == '10*10' ? "selected" : "") . ' value="10*10">10*10</option>';        echo ' <option ' . ($whaws_level_difficulty == '11*11' ? "selected" : "") . ' value="11*11">11*11</option>';        echo ' <option ' . ($whaws_level_difficulty == '12*12' ? "selected" : "") . ' value="12*12">12*12</option>';        echo ' <option ' . ($whaws_level_difficulty == '13*13' ? "selected" : "") . ' value="13*13">13*13</option>';        echo ' <option ' . ($whaws_level_difficulty == '14*14' ? "selected" : "") . ' value="14*14">14*14</option>';        echo ' <option ' . ($whaws_level_difficulty == '15*15' ? "selected" : "") . ' value="15*15">15*15</option>';        echo ' <option ' . ($whaws_level_difficulty == '16*16' ? "selected" : "") . ' value="16*16">16*16</option>';        echo ' <option ' . ($whaws_level_difficulty == '17*17' ? "selected" : "") . ' value="17*17">17*17</option>';        echo ' <option ' . ($whaws_level_difficulty == '18*18' ? "selected" : "") . ' value="18*18">18*18</option>';        echo ' <option ' . ($whaws_level_difficulty == '19*19' ? "selected" : "") . ' value="19*19">19*19</option>';        echo ' <option ' . ($whaws_level_difficulty == '20*20' ? "selected" : "") . ' value="20*20">20*20</option>';        echo '</select>';        echo '</div>';        echo '</div>';        echo __('<h3>Show Instructions?</h3>');        echo '<div>';        if (empty($whaws_instruction)) {            echo '<label class="radio_btn"><input type="radio" value="yes" name="whaws_instruction" checked >' . _e('Yes') . '</label>';            echo '<label class="radio_btn"><input type="radio" value="no" name="whaws_instruction" >' . _e('No') . '</label>';        } else {            echo '<label class="radio_btn"><input type="radio" value="yes" name="whaws_instruction" ' . ($whaws_instruction == "yes" ? "checked" : "") . '>' . _e('Yes') . '</label>';            echo '<label class="radio_btn"><input type="radio" value="no" name="whaws_instruction" ' . ($whaws_instruction == "no" ? "checked" : "") . '>' . _e('No') . '</label>';        }        echo '</div>';        echo '<br>';        echo __('<h3>Words Direction:</h3>');        echo '<div style="width: 100%; max-width: 90px">';        if (empty($whaws_direction)) {            echo '<label class="radio_btn"><input type="radio" value="bottom" name="whaws_direction" checked>' . _e('Bottom:') . '</label><br>';            echo '<label class="radio_btn"><input type="radio" value="top" name="whaws_direction"  >' . _e('Top:') . '</label><br>';            echo '<label class="radio_btn"><input type="radio" value="right" name="whaws_direction"  >' . _e('Right:') . '</label><br>';            echo '<label class="radio_btn"><input type="radio" value="left" name="whaws_direction"  >' . _e('Left:') . '</label>';        } else {            echo '<label class="radio_btn"><input type="radio" value="bottom" name="whaws_direction" ' . ($whaws_direction == "bottom" ? "checked" : "") . '>' . _e('Bottom:') . '</label><br>';            echo '<label class="radio_btn"><input type="radio" value="top" name="whaws_direction" ' . ($whaws_direction == "top" ? "checked" : "") . '>' . _e('Top:') . '</label><br>';            echo '<label class="radio_btn"><input type="radio" value="right" name="whaws_direction" ' . ($whaws_direction == "right" ? "checked" : "") . '>' . _e('Right:') . '</label><br>';            echo '<label class="radio_btn"><input type="radio" value="left" name="whaws_direction" ' . ($whaws_direction == "left" ? "checked" : "") . '>' . _e('Left:') . '</label>';        }        echo '</div>';        echo '<br>';        echo __('<h3>Use Global Options?</h3>');        echo '<div>';        if (empty($whaws_use_global)) {            echo '<label class="radio_btn"><input type="radio" value="yes" name="whaws_use_global_options" >' . _e('Yes') . '</label>';            echo '<label class="radio_btn"><input type="radio" value="no" name="whaws_use_global_options" checked >' . _e('No') . '</label>';        } else {            echo '<label class="radio_btn"><input type="radio" value="yes" name="whaws_use_global_options" ' . ($whaws_use_global == "yes" ? "checked" : "") . '>' . _e('Yes') . '</label>';            echo '<label class="radio_btn"><input type="radio" value="no" name="whaws_use_global_options" ' . ($whaws_use_global == "no" ? "checked" : "") . '>' . _e('No') . '</label>';        }        echo '</div>';        echo '</div>';        echo '<hr class="wha_adm_divider">';        echo '<div class="wordsearch_ind_opt">';        echo __('<h2 style="text-align: left; font-weight: bold;">Alphabet of the wordsearch</h2>');        echo '<table style="width: 100%; margin-bottom: 30px;">';        echo '<tr valign="top">';        echo '<td><input style="width: 100%;" type="text" id="whaws_alphabet_option" name="whaws_alphabet_option" value="' . (!empty($whaws_alphabet_cross) ? "$whaws_alphabet_cross" : "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz") . '"/></td>';        echo '</tr>';        echo '</table>';        if (!empty($whaws_directions_array)) {            echo '<hr class="wha_adm_divider">';            echo '<div>';            _e('<h2 style="margin-top: 15px; font-weight: bold;">Directions</h2>');            _e('<p style="margin-bottom: 30px; font-size: 12px;">If the directions are not specified then the words will be displayed for all directions</p>');            echo '<div style="display: flex;">';            foreach ($whaws_directions_array as $item) {                echo '<table style="margin-right: 5px; margin-left: 5px;">';                echo '<tr valign="middle">';                echo '<td>                    <input type="checkbox" id="' . $item["name"] . '" name="' . $item["name"] . '" value="on" ' . ($item["value"] == "on" ? "checked" : "") . ' />                    ' . $item["html"] . '                                    </td>';                echo '</tr>';                echo '</table>';            }            echo '</div>';        }        echo '<table style="margin-right: 5px; margin-left: 5px; width: 100%; text-align: center;">';        echo '<tr valign="top">';        _e('<h2 style="margin-top: 15px; font-weight: bold;">Congratulations message</h2>');        echo '<td>';        echo wp_editor($whaws_congratulations, 'whaws_congratulations', $settings = array(            'wpautop' => true,            'tinymce' => true,            'editor_height' => 400        ));        echo '</td>';        echo '</tr>';        echo '</div>';        echo '</div>';        echo '</table>';    }}add_action('add_meta_boxes', 'whaws_options_box', 1);function whaws_options_box() // Add Wordsearch option box{    $screens = array('wha_wordsearch');    add_meta_box('whaws_sectionid_options_box', __('Wordsearch', 'wordsearch'), 'whaws_meta_box_callback', $screens, 'advanced', 'high');}function whaws_meta_box_callback($post, $meta) // Call Wordsearch option fields and save{    if (current_user_can('edit_published_posts')) {        $screens = $meta['args'];        wp_nonce_field(plugin_basename(__FILE__), 'myplugin_noncename');        $wordsearch = get_post_meta($post->ID, 'wha_wordsearch', true);        $items = json_decode($wordsearch, true, 512, JSON_UNESCAPED_UNICODE);        echo '<h3 class="description">' . esc_html(__('The more words the more interesting the game.', 'wordsearch')) . '  </h3>';        echo '<div class="wha-wordsearch-row-admin">';        if (!empty($items)) {            foreach ($items as $item) {                echo '<div class="wha-wordsearch-item">';                echo '<div class="wha-wordsearch-block">';                echo '<div class="wha-wordsearch-inner"><input type="text"  name="wha-wordsearch-word[]" value="' . $item['word'] . '" size="25" required /></div>';                echo '</div>';                echo '<a href="#" class="wha-delete-wordsearch-item fa fa-close"></a>';                echo '</div>';            }        }        echo '<div id="wha-wordsearch-action-add" class="wha-wordsearch-action add"><a href="#" class="wha-add-wordsearch-item">' . __('Add new item for wordsearch', 'wordsearch') . '</a></div>';        echo '</div>';        echo '<div class="note"><i class="fa fa-exclamation-circle"></i><p>' . __('Note: You may not see all words on front-end, because there might be not enough space, try to do your sheet bigger.', 'wordsearch') . '</p></div>';    }}// Saving individual optionsadd_action('save_post', 'whaws_save_postdata');function undoMagicQuotes($array, $topLevel = true){    $newArray = array();    foreach ($array as $key => $value) {        if (!$topLevel) {            $key = stripslashes($key);        }        if (is_array($value)) {            $newArray[$key] = undoMagicQuotes($value, false);        } else {            $newArray[$key] = stripslashes($value);        }    }    return $newArray;}function whaws_save_postdata($post_id) // Save Postdata function{    global $notices;    if (!wp_verify_nonce($_POST['myplugin_noncename'], plugin_basename(__FILE__)))        return;    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE)        return;    if (!current_user_can('edit_post', $post_id))        return;    $array = array();    $_POST = undoMagicQuotes($_POST);    if (isset($_POST['wha-wordsearch-word'])) {        $whaws_words = $_POST['wha-wordsearch-word'];    }    if (isset($_POST['whaws_use_global_options'])) {        $whaws_use_global = $_POST['whaws_use_global_options'];    }    if (isset($_POST['whaws_congratulations'])) {        $whaws_congratulations = $_POST['whaws_congratulations'];    }    if (isset($_POST['whaws_instruction'])) {        $whaws_instruction = $_POST['whaws_instruction'];    }    if (isset($_POST['whaws_direction'])) {        $whaws_direction = $_POST['whaws_direction'];    }    if (isset($_POST['whaws_alphabet_option'])) {        $whaws_alphabet_cross = sanitize_text_field(preg_replace("([0-9!.;,><:@#$^&'*()-\+%_=|\/\\\"])", "", strip_tags($_POST['whaws_alphabet_option'])));    }    if (isset($_POST['whaws_rightwards_arrow'])) {        $whaws_rightwards_arrow = $_POST['whaws_rightwards_arrow'];    }    if (isset($_POST['whaws_downwards_arrow'])) {        $whaws_downwards_arrow = $_POST['whaws_downwards_arrow'];    }    if (isset($_POST['whaws_leftwards_arrow'])) {        $whaws_leftwards_arrow = $_POST['whaws_leftwards_arrow'];    }    if (isset($_POST['whaws_upwards_arrow'])) {        $whaws_upwards_arrow = $_POST['whaws_upwards_arrow'];    }    if (isset($_POST['whaws_south_east_arrow'])) {        $whaws_south_east_arrow = $_POST['whaws_south_east_arrow'];    }    if (isset($_POST['whaws_north_east_arrow'])) {        $whaws_north_east_arrow = $_POST['whaws_north_east_arrow'];    }    if (isset($_POST['whaws_south_west_arrow'])) {        $whaws_south_west_arrow = $_POST['whaws_south_west_arrow'];    }    if (isset($_POST['whaws_north_west_arrow'])) {        $whaws_north_west_arrow = $_POST['whaws_north_west_arrow'];    }    if (isset($_POST['whaws_level_difficulty'])) {        $whaws_level_difficulty = $_POST['whaws_level_difficulty'];    }    for ($i = 0; $i < count($whaws_words); $i++) {        $arr['word'] = sanitize_text_field(preg_replace("([0-9+/\|=$%^*&?#@!():;_><.,])", "", strip_tags($whaws_words[$i])));        $array[] = $arr;    }    $json = json_encode($array, JSON_UNESCAPED_UNICODE);    update_post_meta($post_id, 'whaws_alphabet_option', $whaws_alphabet_cross);    update_post_meta($post_id, 'wha_wordsearch', $json);    update_post_meta($post_id, 'whaws_use_global_options', $whaws_use_global);    update_post_meta($post_id, 'whaws_congratulations', $whaws_congratulations);    update_post_meta($post_id, 'whaws_instruction', $whaws_instruction);    update_post_meta($post_id, 'whaws_direction', $whaws_direction);    update_post_meta($post_id, 'whaws_rightwards_arrow', $whaws_rightwards_arrow);    update_post_meta($post_id, 'whaws_downwards_arrow', $whaws_downwards_arrow);    update_post_meta($post_id, 'whaws_leftwards_arrow', $whaws_leftwards_arrow);    update_post_meta($post_id, 'whaws_upwards_arrow', $whaws_upwards_arrow);    update_post_meta($post_id, 'whaws_south_east_arrow', $whaws_south_east_arrow);    update_post_meta($post_id, 'whaws_north_east_arrow', $whaws_north_east_arrow);    update_post_meta($post_id, 'whaws_south_west_arrow', $whaws_south_west_arrow);    update_post_meta($post_id, 'whaws_north_west_arrow', $whaws_north_west_arrow);    update_post_meta($post_id, 'whaws_level_difficulty', $whaws_level_difficulty);}add_action('admin_menu', 'whaws_global_options');function whaws_global_options()  // Create Global Options page{    add_submenu_page('edit.php?post_type=wha_wordsearch', __('Wordsearch Options', 'wordsearch'), __('Settings', 'wordsearch'), 'edit_published_posts', 'wha-wordsearch', 'whaws_global_options_callback');    add_action('admin_init', 'whaws_register_settings');}function whaws_register_settings() //register strings for option{    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_alphabet_option_name');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_direction');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_rightwards_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_downwards_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_leftwards_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_upwards_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_south_east_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_north_east_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_south_west_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_north_west_arrow');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_congradulations_text_option');    register_setting('wha-wordsearch-plugin-settings-group', 'whaws_how_to_play');}function whaws_global_options_callback() // Call form with global options{ ?>    <div class="wrap">        <h2><?php echo get_admin_page_title() ?></h2>    </div>    <?php if (current_user_can('edit_published_posts')) { ?>    <form method="post" action="options.php">        <?php settings_fields('wha-wordsearch-plugin-settings-group'); ?>        <?php do_settings_sections('wha-wordsearch-plugin-settings-group'); ?>        <table class="form-table">            <tr valign="top">                <th scope="row"><?php echo esc_html(__('Alphabet', 'wordsearch')) ?></th>                <td>                    <?php if (esc_html(get_option('whaws_alphabet_option_name'))): ?>                        <input type="text" name="whaws_alphabet_option_name" style="width: 100%;"                               value="<?php echo esc_attr(sanitize_text_field(preg_replace("([0-9!.;,><:@#$^&'*()-\+%_=|\/\\\"])", "", get_option('whaws_alphabet_option_name')))); ?>"/>                    <?php else: ?>                        <input type="text" name="whaws_alphabet_option_name" style="width: 100%;"                               value="AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"/>                    <?php endif; ?>                    <p>ex. AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz</p></td>                </td>            </tr>            <!-- whaws_instruction -->            <tr valign="top">                <th scope="row"><?php echo __('How to play', 'wordsearch') ?></th>                <td>                    <?php                    echo wp_editor(get_option('whaws_how_to_play'), 'whaws_how_to_play', $settings = array(                        'wpautop' => true,                        'tinymce' => true,                        'editor_height' => 400                    ));                    ?>                </td>            </tr>            <tr valign="top">                <th scope="row"><?php echo esc_html(__('Congradulations text', 'wordsearch')) ?></th>                <td>                    <?php                    echo wp_editor(get_option('whaws_congradulations_text_option'), 'whaws_congradulations_text_option', $settings = array(                        'wpautop' => true,                        'tinymce' => true,                        'editor_height' => 400                    ));                    ?>                </td>            </tr>            <tr valign="top">                <th scope="row"><?php echo esc_html(__('Directions', 'wordsearch')) ?></th>                <td>                    <div>                        <input type="checkbox"                               name="whaws_rightwards_arrow" <?php echo esc_attr(get_option('whaws_rightwards_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_rightwards_arrow"><i class="fa fa-arrow-right"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_downwards_arrow" <?php echo esc_attr(get_option('whaws_downwards_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_downwards_arrow"><i class="fa fa-arrow-down"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_leftwards_arrow" <?php echo esc_attr(get_option('whaws_leftwards_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_leftwards_arrow"><i class="fa fa-arrow-left"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_upwards_arrow" <?php echo esc_attr(get_option('whaws_upwards_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_upwards_arrow"><i class="fa fa-arrow-up"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_south_east_arrow" <?php echo esc_attr(get_option('whaws_south_east_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_south_east_arrow"><i class="fa fa-arrow-down wha-rotate-45-left"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_north_east_arrow" <?php echo esc_attr(get_option('whaws_north_east_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_north_east_arrow"><i class="fa fa-arrow-up wha-rotate-45-right"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_south_west_arrow" <?php echo esc_attr(get_option('whaws_south_west_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_south_west_arrow"><i class="fa fa-arrow-down wha-rotate-45-right"></i></label>                    </div>                    <div>                        <input type="checkbox"                               name="whaws_north_west_arrow" <?php echo esc_attr(get_option('whaws_north_west_arrow')) ? 'checked' : ''; ?> />                        <label for="whaws_north_west_arrow"><i class="fa fa-arrow-up wha-rotate-45-left"></i></label>                    </div>                </td>            </tr>            <tr valign="top">                <th scope="row"><?php echo esc_html(__('Description', 'wordsearch')) ?></th>                <td>                    <h5><?php echo esc_html(__('if the directions are not specified then the words will be displayed for all directions', 'wordsearch')) ?></h5>                    <div>                        <i class="fa fa-arrow-up wha-rotate-45-left"></i>                        <i class="fa fa-arrow-up"></i>                        <i class="fa fa-arrow-up wha-rotate-45-right"></i>                        <br/>                        <i class="fa fa-arrow-left"></i>                        <i class="fa fa-arrow-up fa-hidden"></i>                        <i class="fa fa-arrow-right"></i>                        <br/>                        <i class="fa fa-arrow-down wha-rotate-45-right"></i>                        <i class="fa fa-arrow-down"></i>                        <i class="fa fa-arrow-down wha-rotate-45-left"></i>                    </div>                </td>            </tr>        </table>        <?php submit_button(); ?>        <?php if (isset($_GET['settings-updated']) == 'true') : ?>            <div class="notice notice-success is-dismissible">                <p><?php _e('Settings saved!', 'menu-wordsearch'); ?></p>            </div>        <?php elseif (isset($_GET['settings-updated']) == 'false'): ?>            <div class="notice notice-error is-dismissible">                <p><?php _e('Sorry. Something happened.', 'menu-wordsearch'); ?></p>            </div>        <?php endif; ?>    </form>    <?php}}function whaws_sidebar_meta_box(){    add_meta_box(        'whaws_sidebar',        __('&nbsp;', 'myplugin_textdomain'),        'whaws_sidebar_meta_box_callback',        'wha_wordsearch',        'side'    );}add_action('add_meta_boxes', 'whaws_sidebar_meta_box', 2);function whaws_sidebar_meta_box_callback($post, $meta) // Call Areachart option fields and save{    $item = '';    $item .= '<h1>Plugin Developed by</h1>';    $item .= '<div class="whaws_logo_wrap"><img src="' . plugins_url("res/admin/images/wha-logo.svg", __FILE__) . '" width="10px" alt="wha_logo"></div>';    $item .= '<h2><wha>WHA</wha> is team of  top-notch WordPress developers.</h2>';    $item .= '<h4>Our advantages:</h4>';    $item .= '              <ul class="whaws_sidebar_list">                <li><wha>—</wha> TOP 20 WordPress companies on Clutch;</li>                <li><wha>—</wha> More than 4 years of experience;</li>                <li><wha>—</wha> NDA for each project;</li>                <li><wha>—</wha> Dedicate project manager for each project;</li>                <li><wha>—</wha> Flexible working hours;</li>                <li><wha>—</wha> Friendly management;</li>                <li><wha>—</wha> Clear workflow;</li>                <li><wha>—</wha> Based in Europe, you can easily reach us via any airlines;</li>            </ul>';    $item .= '<h3>Looking for dedicated team?</h3>';    $item .= '  <a href="https://webhelpagency.com/say-hello/?title=wporg_free_consultation" class="btn btn-reverse btn-arrow"><span>Start a Project<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 36.1 25.8" enable-background="new 0 0 36.1 25.8" xml:space="preserve"><g><line fill="none" stroke="#FFFFFF" stroke-width="3" stroke-miterlimit="10" x1="0" y1="12.9" x2="34" y2="12.9"></line><polyline fill="none" stroke="#FFFFFF" stroke-width="3" stroke-miterlimit="10" points="22.2,1.1 34,12.9 22.2,24.7   "></polyline></g></svg></span></a>';    echo $item;}